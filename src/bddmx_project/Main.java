package bddmx_project;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Detect Color");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });


        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Result");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(32, 32, 32)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 214, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public String chemin_image;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        int option= chooser.showDialog(null, "Selectionner Image..");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if(option == JFileChooser.APPROVE_OPTION){
        chemin_image= chooser.getSelectedFile().getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(chemin_image); // load the image to a imageIcon
        Image image = imageIcon.getImage(); // transform it 
        Image newimg = image.getScaledInstance(300, 300,  java.awt.Image.SCALE_SMOOTH); 
        imageIcon = new ImageIcon(newimg);  
        jLabel1.setIcon(imageIcon);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BufferedImage bimg;
        int Y;
        try{
            bimg= ImageIO.read(new File(chemin_image));
            //Access the pixels
            int w = bimg.getWidth(null);
            int h = bimg.getHeight(null);
            int[][] pixels = new int[w][h];
            int nearlyWhite = 0,nearlyBlack = 0,yellow = 0,green = 0,cyan = 0,blue = 0,magenta = 0,red = 0,grey = 0,whole=0;
            for(int x = 0; x < w; x++)
            {
                for(int y = 0; y < h; y++)
                    {
                        whole++;
                    int rgb= bimg.getRGB(x,y);
                    float hsb[] = new float[3];
                    int r = (rgb >> 16) & 0xFF;
                    int g = (rgb >>  8) & 0xFF;
                    int b = (rgb      ) & 0xFF;
                    Color.RGBtoHSB(r, g, b, hsb);
                    Color c = null;
                    if (hsb[1] < 0.1 && hsb[2] > 0.9){ nearlyWhite++;
                    c = new Color(255,255,255);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                    else if (hsb[2] < 0.1) {nearlyBlack++;
                    c = new Color(0,0,0);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                    else if(r==g&&g==b){grey++;
                    c = new Color(128,128,128);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                    else {
                        float deg = hsb[0]*360;
                        if  (deg >=   0 && deg <  30) {red++;
                    c = new Color(255,0,0);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                        else if (deg >=  30 && deg <  90){ yellow++;
                    c = new Color(255,255,0);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                        else if (deg >=  90 && deg < 150){ green++;
                    c = new Color(0,255,0);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                        else if (deg >= 150 && deg < 210){ cyan++;
                    c = new Color(0,255,255);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                        else if (deg >= 210 && deg < 270) {blue++;
                    c = new Color(0,0,255);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                        else if (deg >= 270 && deg < 330){ magenta++;
                    c = new Color(255,0,255);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                        else {red++;
                    c = new Color(255,0,0);
                    pixels[x][y] = c.getRGB();
                    bimg.setRGB(x, y, pixels[x][y]);}
                    } 
                }
            }
                        String result="<html>White : "+ nearlyWhite*100/whole +
                                       "% <br/>Black : " + nearlyBlack*100/whole +
                                       "% <br/>grey : " + grey*100/whole +
                                       "% <br/>Red : " + red*100/whole +
                                       "% <br/>Yellow : " + yellow*100/whole +
                                       "% <br/>Green : " + green*100/whole +
                                       "% <br/>Cyan : " + cyan*100/whole +
                                       "% <br/>Blue : " + blue*100/whole +
                                       "% <br/>Magenta : " + magenta*100/whole + "%</html>";
            System.out.println(result);

             File file= new File(chemin_image);
            ImageIO.write(bimg, "jpg", file);
            ImageIcon imageIcon = new ImageIcon(chemin_image);
            Image image = imageIcon.getImage();
            Image newimg = image.getScaledInstance(300, 300,  java.awt.Image.SCALE_SMOOTH);
            imageIcon = new ImageIcon(newimg);
            jLabel2.setIcon(imageIcon);
            jLabel3.setText(result);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
